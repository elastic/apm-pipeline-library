---
## This is the file that contains what projects should bump their Golang
## release versions.
##
## The data structure:
##  repo: the repository name
##  script: the relative path to the script in charge to bump the version
##  branches: the list of branches that should benefit from this automation.
##  enabled: whether the automation has been enabled for this project.
##  labels: list of GitHub labels to be added to the Pull Request (comma separated).
##  title: the PR title, empty if you'd like to use the default one.
##  assign: A comma-separated list (no spaces around the comma) of GitHub handles to assign to this pull request. Optional.
##  reviewer: A comma-separated list (no spaces around the comma) of GitHub handles to request a review from. Optional.
##  overrideGoVersion: The major.minor version to be used since some projects do not use the latest major.minor version but the previous one. Optional.
##  description: Extended description to be added to the existing one in the PR. Optional.
##
projects:
  - repo: apm-pipeline-library
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency
    reviewer: elastic/observablt-ci
  - repo: apm-integration-testing
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    enabled: true
    labels: dependency
    reviewer: elastic/observablt-ci
  - repo: beats
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency,backport-skip
    description: It requires the version to be bumped first in golang-crossbuild project, then a new release will be added to https://github.com/elastic/golang-crossbuild/releases. Otherwise it will fail until the docker images are available.
  - repo: cloudbeat
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    enabled: true
    labels: dependency
    reviewer: elastic/cloudbeat
    overrideGoVersion: "1.18"
  - repo: elastic-agent-shipper
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency,backport-skip
  - repo: elastic-agent
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency,backport-skip
    description: It requires the version to be bumped first in golang-crossbuild project, then a new release will be added to https://github.com/elastic/golang-crossbuild/releases. Otherwise it will fail until the docker images are available.
  - repo: elastic-agent-autodiscover
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency
  - repo: elastic-agent-inputs
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency
  - repo: elastic-agent-libs
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency
  - repo: elastic-agent-system-metrics
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    overrideGoVersion: "1.18"
    enabled: true
    labels: dependency
  - repo: fleet-server
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    enabled: true
    labels: dependency,backport-skip
  - repo: golang-crossbuild
    script: .ci/bump-go-release-version.sh
    branches:
      - main
      - "1.18"
      - "1.17"
    enabled: true
    labels: dependency
  - repo: observability-robots
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    enabled: true
    labels: dependency
    reviewer: elastic/observablt-ci
  - repo: stream
    script: .ci/bump-go-release-version.sh
    branches:
      - main
    enabled: true
    labels: dependency
