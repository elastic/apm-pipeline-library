apply plugin: 'groovy'

sourceSets {
    jobs {
        groovy {
            srcDirs 'jobs'
        }
    }
}

repositories {
    maven { url 'http://repo.jenkins-ci.org/releases/' }
    mavenCentral()
    jcenter()
}

configurations {
    testPlugins {}

    // see JENKINS-45512
    testCompile {
        exclude group: 'xalan'
        exclude group: 'xerces'
    }
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.21'
  compile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

  testCompile 'org.spockframework:spock-core:1.3-groovy-2.4'
  testCompile 'cglib:cglib-nodep:2.2.2' // used by Spock

  // Jenkins test harness dependencies
  testCompile('org.jenkins-ci.main:jenkins-test-harness:2.71') {
      //exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane' // https://github.com/sheehan/job-dsl-gradle-example/issues/90
  }
  testCompile("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
      //exclude group: 'org.jenkins-ci.ui', module: 'bootstrap' // https://github.com/sheehan/job-dsl-gradle-example/issues/87
  }

  testCompile("io.jenkins.tools.bom:bom-2.204.x:18")

  // Job DSL plugin including plugin dependencies
  testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
  testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
  testCompile 'org.jenkins-ci.plugins:structs:1.21@jar'

  // Plugins to install in test instance
  testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.14'
  testPlugins 'org.jenkins-ci.plugins:credentials:2.3.14'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-aggregator:2.6'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-api:2.40'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.23'
  testPlugins 'org.jenkins-ci.plugins:matrix-project:1.18'

  // Run the following script in the Script Console of your Jenkins instance to generate
  // the above testPlugins list. (adapted from https://git.io/fjpUs)
  /*
      Jenkins.instance.pluginManager.plugins
          .findAll { !(it.shortName in ['job-dsl', 'structs']) }
          .collect { "testPlugins '${it.manifest.mainAttributes.getValue("Group-Id")}:${it.shortName}:${it.version}'" }
          .sort()
          .each { println it }
   */
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'

    doLast {
        def baseNames = source.collect { it.name[0..it.name.lastIndexOf('.')-1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}
