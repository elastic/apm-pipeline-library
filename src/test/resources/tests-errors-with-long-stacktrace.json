[
  {
    "age": 1,
    "duration": 0.845,
    "errorDetails": "AssertionError: expected to see 2 entries, got '[{'id': 'native::8013346-2049', 'timestamp': 1604396243.1689308, 'ttl': -1, 'identifier_name': 'native', 'prev_id': '', 'source': '/go/src/github.com/elastic/beats/filebeat/build/system-tests/run/test_harvester.Test.test_symlink_rotated/log/symlink.log', 'offset': 13, 'type': 'log', 'FileStateOS': {'inode': 8013346, 'device': 2049}, '_key': 'filebeat::logs::native::8013346-2049'}]' assert 1 == 2  +  where 1 = len([{'FileStateOS': {'device': 2049, 'inode': 8013346}, '_key': 'filebeat::logs::native::8013346-2049', 'id': 'native::8013346-2049', 'identifier_name': 'native', ...}])",
    "errorStackTrace": "self = <test_harvester.Test testMethod=test_symlink_rotated>\n\n    def test_symlink_rotated(self):\n        \"\"\"\n        Test what happens if symlink removed and points to a new file\n        \"\"\"\n        self.render_config_template(\n            path=os.path.abspath(self.working_dir) + \"/log/symlink.log\",\n            symlinks=\"true\",\n            close_removed=\"false\",\n            clean_removed=\"false\",\n        )\n    \n        os.mkdir(self.working_dir + \"/log/\")\n    \n        logfile1 = self.working_dir + \"/log/test1.log\"\n        logfile2 = self.working_dir + \"/log/test2.log\"\n        symlink = self.working_dir + \"/log/symlink.log\"\n    \n        if os.name == \"nt\":\n            import win32file\n            win32file.CreateSymbolicLink(symlink, logfile1, 0)\n        else:\n            os.symlink(logfile1, symlink)\n    \n        with open(logfile1, 'a') as file:\n            file.write(\"Hello World1\\n\")\n    \n        with open(logfile2, 'a') as file:\n            file.write(\"Hello World2\\n\")\n    \n        filebeat = self.start_beat()\n    \n        # Make sure some state is written\n        self.wait_until(\n            lambda: len(self.get_registry()) > 0,\n            max_timeout=10)\n    \n        # Make sure symlink is skipped\n        self.wait_until(\n            lambda: self.output_has(lines=1),\n            max_timeout=10)\n    \n        os.remove(symlink)\n    \n        if os.name == \"nt\":\n            import win32file\n            win32file.CreateSymbolicLink(symlink, logfile2, 0)\n        else:\n            os.symlink(logfile2, symlink)\n    \n        with open(logfile1, 'a') as file:\n            file.write(\"Hello World3\\n\")\n            file.write(\"Hello World4\\n\")\n    \n        # Make sure new file and addition to old file were read\n        self.wait_until(\n            lambda: self.output_has(lines=4),\n            max_timeout=10)\n    \n        filebeat.check_kill_and_wait()\n    \n        # Check if two different files are in registry\n        data = self.get_registry()\n>       assert len(data) == 2, \"expected to see 2 entries, got '%s'\" % data\nE       AssertionError: expected to see 2 entries, got '[{'id': 'native::8013346-2049', 'timestamp': 1604396243.1689308, 'ttl': -1, 'identifier_name': 'native', 'prev_id': '', 'source': '/go/src/github.com/elastic/beats/filebeat/build/system-tests/run/test_harvester.Test.test_symlink_rotated/log/symlink.log', 'offset': 13, 'type': 'log', 'FileStateOS': {'inode': 8013346, 'device': 2049}, '_key': 'filebeat::logs::native::8013346-2049'}]'\nE       assert 1 == 2\nE        +  where 1 = len([{'FileStateOS': {'device': 2049, 'inode': 8013346}, '_key': 'filebeat::logs::native::8013346-2049', 'id': 'native::8013346-2049', 'identifier_name': 'native', ...}])\n\ntests/system/test_harvester.py:628: AssertionError",
    "id": "io.jenkins.blueocean.service.embedded.rest.junit.BlueJUnitTestResult:filebeat.tests.system.test_harvester.Test%3Ajunit%2Ffilebeat.tests.system.test_harvester%2FTest%2FBuild_Test___filebeat_build___test_symlink_rotated",
    "name": "Build&Test / filebeat-build / test_symlink_rotated - filebeat.tests.system.test_harvester.Test",
    "status": "FAILED"
  }
]
