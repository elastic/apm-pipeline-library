name: 'Oblt-cli cluster credentials'
description: 'Run the oblt-cli wrapper to retrieve the credentials to connect to the given cluster'
inputs:
  cluster-name:
    description: 'The cluster name'
    required: false
  github-token:
    description: 'The GitHub access token.'
    required: true
  vault-role-id:
    description: 'Vault role ID'
    required: true
  vault-secret-id:
    description: 'Vault secret ID'
    required: true
  vault-url:
    description: 'Vault URL'
    required: true
runs:
  using: "composite"
  steps:
    - uses: elastic/apm-pipeline-library/.github/actions/setup-oblt-cli@test/cluster-credentials
      with:
        github-token: ${{ inputs.github-token }}

    - uses: elastic/apm-pipeline-library/.github/actions/setup-vault-cli@current
      with:
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}

    - name: run oblt-cli
      run: oblt-cli cluster secrets env --cluster-name ${{ env.CLUSTER_NAME }} --output-file ".cluster-secrets"
      shell: bash
      env:
        CLUSTER_NAME: ${{ inputs.cluster-name }}
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: mask secrets
      uses: actions/github-script@v6
      with:
        script: |
          var PropertiesReader = require('properties-reader')
          var properties = PropertiesReader('.cluster-secrets')
          properties.each((key, value) => {
            console.log(key + ": masked")
            core.setSecret(value)
            core.exportVariable(key, value)
          })
          var fs = require('fs')
          fs.rmSync('.cluster-secrets', {
              force: true,
          });
