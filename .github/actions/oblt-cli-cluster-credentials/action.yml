name: 'Oblt-cli cluster credentials'
description: 'Run the oblt-cli wrapper to retrieve the credentials to connect to the given cluster'
inputs:
  cluster-name:
    description: 'The cluster name'
    required: false
  cluster-info-file:
    description: 'The cluster info file (absolute path)'
    required: false
  github-token:
    description: 'The GitHub access token.'
    required: true
  vault-role-id:
    description: 'Vault role ID'
    required: true
  vault-secret-id:
    description: 'Vault secret ID'
    required: true
  vault-url:
    description: 'Vault URL'
    required: true
runs:
  using: "composite"
  steps:
    - name: Process inputs
      uses: actions/github-script@v6
      env:
        CLUSTER_NAME_INPUT: ${{ inputs.cluster-name }}
        CLUSTER_INFO_FILE_INPUT: ${{ inputs.cluster-info-file }}
      with:
        script: |
          const clusterNameInput = process.env.CLUSTER_NAME_INPUT
          const clusterInfoFile = process.env.CLUSTER_INFO_FILE_INPUT

          console.log(`clusterName is "${clusterNameInput}"`)
          console.log(`clusterInfoFile is "${clusterInfoFile}"`)

          if (clusterNameInput && clusterInfoFile) {
            core.setFailed(`Either cluster-name or cluster-info-file but no both`)
            return
          }

          var clusterName = clusterNameInput

          if (clusterInfoFile) {
            const fs = require('fs')
            const data = fs.readFileSync(clusterInfoFile, 'utf8')

            console.log(`data is "${data}"`)
            const jsonObject = JSON.parse(data)
            console.log(`jsonObject is "${jsonObject}"`)
            if (jsonObject && jsonObject.ClusterName === undefined) {
              core.setFailed(`cluster-info-file does not contain the field ClusterName`)
              return
            }
            clusterName = jsonObject.ClusterName
          }

          if (clusterName.trim().length === 0) {
            core.setFailed(`cluster name is empty`)
            return
          }

          console.log(`clusterName is "${clusterName}"`)
          core.exportVariable('CLUSTER_NAME', `${clusterName}`)

    - uses: elastic/apm-pipeline-library/.github/actions/setup-oblt-cli@current
      with:
        github-token: ${{ inputs.github-token }}

    - uses: elastic/apm-pipeline-library/.github/actions/setup-vault-cli@current
      with:
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}

    - name: run oblt-cli
      run: |
        oblt-cli cluster secrets env --cluster-name ${{ env.CLUSTER_NAME }} --output-file "$(pwd)/${{ env.ENV_FILE }}"
        cat "${{ env.ENV_FILE }}" >> "${GITHUB_ENV}"
        source "${{ env.ENV_FILE }}"
        for i in $(cat "${{ env.ENV_FILE }}"|cut -d "=" -f 1); do
          VALUE=$(eval "echo \${$i}")
          if [ -n "$VALUE" ] ; then
            echo "::add-mask::${VALUE}"
          fi
        done
        rm -f "${{ env.ENV_FILE }}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        ENV_FILE: .cluster-credentials
