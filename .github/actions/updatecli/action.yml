name: 'Updatecli'
description: 'Run the declarative dependency manager.'
inputs:
  pipeline:
    description: 'The updatecli pipeline to run'
    required: true
  values:
    description: 'The updatecli values file uses for templating'
    required: false
  vaultUrl:
    description: 'Vault URL'
    required: true
  vaultRoleId:
    description: 'Vault role ID'
    required: true
  vaultSecretId:
    description: 'Vault secret ID'
    required: true
  dockerRegistry:
    description: 'Docker registry'
    default: 'docker.elastic.co'
    required: false
  dockerVaultSecret:
    description: 'Vault secret with the format {username:"foo", password:"bar"}'
    default: 'secret/observability-team/ci/docker-registry/prod'
  command:
    description: 'What updatecli command'
    default: 'apply'
    required: false
  notifyIfFailure:
    description: 'Whether to notify if any failure while running the updatecli'
    default: true
    required: false
  notifySlackChannel:
    description: 'What slack channel to be used for notifying any failures while running the updatecli'
    default: '#observablt-bots'
    required: false
runs:
  using: "composite"
  steps:

    - name: Setup Git
      uses: elastic/apm-pipeline-library/.github/actions/setup-git@current

    - uses: elastic/apm-pipeline-library/.github/actions/github-token@current
      with:
        url: ${{ inputs.vaultUrl }}
        roleId: ${{ inputs.vaultRoleId }}
        secretId: ${{ inputs.vaultSecretId }}

    - uses: elastic/apm-pipeline-library/.github/actions/docker-login@current
      with:
        registry: ${{ inputs.dockerRegistry }}
        url: ${{ inputs.vaultUrl }}
        roleId: ${{ inputs.vaultRoleId }}
        secretId: ${{ inputs.vaultSecretId }}
        secret: ${{ inputs.dockerVaultSecret }}

    - name: Install Updatecli in the runner
      uses: updatecli/updatecli-action@624b94033d57c1c63c39086232c1e4c26e17a6ba

    - name: Run Updatecli
      run: |-
        if [ -n '${{ inputs.values }}' ] ; then
          FLAGS="--values ${{ inputs.values }}"
        fi
        updatecli ${{ inputs.command }} --config ${{ inputs.pipeline }} ${FLAGS}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

    - if: ${{ failure() && contains(inputs.notifyIfFailure, 'true') }}
      name: Report updatecli failure in slack
      uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
      with:
        url: ${{ inputs.vaultUrl }}
        roleId: ${{ inputs.vaultRoleId }}
        secretId: ${{ inputs.vaultSecretId }}
        channel: ${{ inputs.notifySlackChannel }}
        message: ":traffic_cone: updatecli failed for `${{ github.repository }}@${{ github.ref_name }}`, @robots-ci please look what's going on <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|here>"
