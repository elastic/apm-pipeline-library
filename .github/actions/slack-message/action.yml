---
name: 'Send a Slack message'
description: 'Get the credentials from the Vault and send an Slack message.'
inputs:
  url:
    description: 'Vault URL'
    required: true
  roleId:
    description: 'Vault role ID'
    required: true
  secretId:
    description: 'Vault secret ID'
    required: true
  channel:
    description: 'Slack channel'
    required: true
  message:
    description: 'Slack message on Markdown format'
    required: true
runs:
  using: "composite"
  steps:
    - uses: hashicorp/vault-action@v2.4.2
      with:
        url: ${{ inputs.url }}
        roleId: ${{ inputs.roleId }}
        secretId: ${{ inputs.secretId }}
        method: approle
        secrets: |
          secret/observability-team/ci/stack-integartion-token integration_token | SLACK_BOT_TOKEN

    - name: prepare message
      shell: bash
      env:
        SLACK_MESSAGE: ${{ inputs.message }}
      run: |
        echo "::add-mask::${SLACK_MESSAGE}"
        echo "SLACK_MESSAGE_JSON=$(echo '${{ env.SLACK_MESSAGE }}' | sed 's/"/\\"/g')" >> $GITHUB_ENV
        echo "SLACK_MESSAGE_JSON=$(echo '${{ toJSON(env.SLACK_MESSAGE_JSON) }}')" >> $GITHUB_ENV
        echo "::add-mask::${SLACK_MESSAGE_JSON}"
    - name: Processing message
      uses: slackapi/slack-github-action@v1.22.0
      with:
        channel-id: '${{ inputs.channel }}'
        payload: |
          {
            "text": ${{ env.SLACK_MESSAGE_JSON }},
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ env.SLACK_MESSAGE_JSON }}
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
    - name: Reset environment
      shell: bash
      run: |
          echo "SLACK_BOT_TOKEN=" >> $GITHUB_ENV
