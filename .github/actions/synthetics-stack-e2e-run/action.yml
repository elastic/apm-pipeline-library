---
name: synthetics-stack-e2e-run
description: |
  This action is part of the synthetics-stack-e2e action.

  It first creates a Kibana docker image, then it deploys an ESS cluster with the created docker image,
  and finally it runs the Synthetics Stack E2E tests against the deployed ESS cluster.

inputs:
  vault-url:
    description: 'Vault URL'
    required: true
  vault-role-id:
    description: 'Vault role ID'
    required: true
  vault-secret-id:
    description: 'Vault secret ID'
    required: true
  comment-id:
    description: 'The GitHub Comment ID'
    default: ${{ github.event.comment.id }}
  commit-sha:
    description: 'The commit SHA'
    required: false
  pr-number:
    description: 'The PR number'
    default: ${{ github.event.issue.number }}
    required: false
  user:
    description: 'The GitHub user that triggered the workflow'
    default: ${{ github.triggering_actor }}
    required: true

runs:
  using: composite
  steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - uses: elastic/apm-pipeline-library/.github/actions/github-token@current
      with:
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}

    - uses: elastic/apm-pipeline-library/.github/actions/setup-git@current
      with:
        username: ${{ env.GIT_USER }}
        email: ${{ env.GIT_EMAIL }}
        token: ${{ env.GITHUB_TOKEN }}

    - uses: elastic/apm-pipeline-library/.github/actions/setup-oblt-cli@current
      with:
        github-token: ${{ env.GITHUB_TOKEN }}

    - uses: elastic/apm-pipeline-library/.github/actions/docker-login@current
      with:
        registry: docker.elastic.co
        secret: secret/observability-team/ci/docker-registry/prod
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}

    - uses: elastic/apm-pipeline-library/.github/actions/kibana-docker-image@current
      id: kibana-docker-image
      with:
        github-repository: ${{ github.repository }}
        git-ref: ${{ inputs.commit-sha || format('refs/pull/{0}/head', inputs.pr-number) }}

    - name: Create cluster
      id: create-cluster
      run: >-
        ${{ github.action_path }}/create-cluster.sh
        ${{ steps.kibana-docker-image.outputs.kibana-docker-image }}
        ${{ steps.kibana-docker-image.outputs.kibana-stack-version }}
      shell: bash

    # - uses: elastic/apm-pipeline-library/.github/actions/buildkite@current # TODO: Use this when PR is merged
    - uses: reakaleek/apm-pipeline-library/.github/actions/buildkite@main
      id: buildkite
      with:
        vaultUrl: ${{ inputs.vault-url }}
        vaultRoleId: ${{ inputs.vault-role-id }}
        vaultSecretId: ${{ inputs.vault-secret-id }}
        pipeline: kibana-pr-synthetics-stack-e2e-ci
        triggerMessage: Triggered by PR ${{ github.repository }}#${{ inputs.pr-number }}
        pipelineBranch: use-kibana-url
        waitFor: true
        buildEnvVars: |
          OBLT_CLUSTER_STATE_SECRET_PATH=secret/observability-team/ci/test-clusters/${{ steps.create-cluster.outputs.cluster-name }}/cluster-state
          KIBANA_PR_URL=${{ github.server_url }}/${{ github.repository }}/pull/${{ inputs.pr-number }}

    - if: always() && steps.buildkite.outputs.build
      name: Add notice message
      run: |
        echo "::notice title=${TITLE}::${BUILDKITE_BUILD_URL}"
      shell: bash
      env:
        BUILDKITE_BUILD_URL: ${{ steps.buildkite.outputs.build }}
        TITLE: Synthetics Stack E2E Buildkite Build

    - if: always() && steps.create-cluster.outputs.cluster-name
      name: Destroy cluster
      run: |
        oblt-cli cluster destroy \
          --force \
          --disable-banner \
          --cluster-name="${CLUSTER_NAME}"
      env:
        CLUSTER_NAME: ${{ steps.create-cluster.outputs.cluster-name }}
      shell: bash
