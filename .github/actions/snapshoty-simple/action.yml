name: 'Snapshoty Simple'
description: 'The best way to handle snapshot lifecycle with Vault access.'
inputs:
  config:
    description: 'Path to configuration file'
    default: '.ci/snapshoty.yml'
    required: false
  vaultUrl:
    description: 'Vault URL'
    required: true
  vaultRoleId:
    description: 'Vault role ID'
    required: true
  vaultSecretId:
    description: 'Vault secret ID'
    required: true
runs:
  using: "composite"
  steps:

    - uses: elastic/apm-pipeline-library/.github/actions/docker-login@current
      with:
        registry: docker.elastic.co
        url: ${{ inputs.vaultUrl }}
        roleId: ${{ inputs.vaultRoleId }}
        secretId: ${{ inputs.vaultSecretId }}
        dockerVaultSecret: secret/observability-team/ci/docker-registry/prod

    - uses: hashicorp/vault-action@v2
      with:
        url: ${{ secrets.VAULT_ADDR }}
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        method: approle
        secrets: |
          secret/observability-team/ci/snapshoty client_email | GCS_CLIENT_EMAIL ;
          secret/observability-team/ci/snapshoty private_key | GCS_PRIVATE_KEY ;
          secret/observability-team/ci/snapshoty private_key_id | GCS_PRIVATE_KEY_ID ;
          secret/observability-team/ci/snapshoty project_id | GCS_PROJECT

    - uses: elastic/apm-pipeline-library/.github/actions/snapshoty@current
      with:
        config: ${{ input.config }}
        bucketName: 'oblt-artifacts'
        gcsClientEmail: '${{ env.GCS_CLIENT_EMAIL }}'
        gcsPrivateKey: '${{ env.GCS_PRIVATE_KEY }}'
        gcsPrivateKeyId: '${{ env.GCS_PRIVATE_KEY_ID }}'
        gcsProject: '${{ env.GCS_PROJECT }}'
