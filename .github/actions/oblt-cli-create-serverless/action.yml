name: 'Oblt-cli create serverless'
description: 'Run the oblt-cli wrapper to create a serverless cluster.'
inputs:
  cluster-name-prefix:
    description: 'Prefix to be prepended to the randomised cluster name'
    required: false
  cluster-name-suffix:
    description: 'Suffix to be appended to the randomised cluster name'
    required: false
  target:
    description: 'The target environment where to deploy the serverless cluster. Default: `qa`'
    default: "qa"
    required: false
  project-type:
    description: 'The project type. Default: `observability`'
    default: "observability"
    required: false
  token:
    description: 'The GitHub access token.'
    required: true
  slackChannel:
    description: 'The slack channel to notify the status.'
    default: '#observablt-bots'
    required: false
  username:
    description: 'Username to show in the deployments with oblt-cli, format: [a-z0-9]'
    default: 'apmmachine'
    required: false
  gitops:
    description: 'Whether to provide the GitOps metadata to the oblt-cli'
    default: false
    required: false
  dry-run:
    description: 'Whether to dryRun'
    default: false
    required: false
runs:
  using: "composite"
  steps:
    - name: Configure oblt-cli flags
      uses: actions/github-script@v6
      with:
        script: |
          const { GITHUB_ACTION_PATH } = process.env
          const script_path = `${GITHUB_ACTION_PATH}/prepare-flags.js'
          console.log(`Running script ${script_path}`)
          const script = require(script_path)
          script()
      env:
        cluster_name_prefix: ${{ inputs.cluster-name-prefix }}
        cluster_name_suffix: ${{ inputs.cluster-name-suffix }}
        dry_run: ${{ inputs.dry-run }}
        gitops: ${{ inputs.gitops }}
        target: ${{ inputs.target }}
        project_type: ${{ inputs.project-type }}

    - uses: elastic/apm-pipeline-library/.github/actions/oblt-cli@current
      with:
        command: cluster create custom --template serverless ${{ env.DRY_RUN }} ${{ env.CLUSTER_NAME_PREFIX }} ${{ env.CLUSTER_NAME_SUFFIX }} ${{ env.PARAMETERS }}
        slackChannel: ${{ inputs.slackChannel }}
        token: ${{ inputs.token }}
        username: ${{ inputs.username }}
