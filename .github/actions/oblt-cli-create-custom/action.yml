name: 'Oblt-cli create custom'
description: 'Run the oblt-cli wrapper to create a custom cluster.'
inputs:
  template:
    description: 'The Oblt cluster template to use'
    required: true
  parameters:
    description: 'The Oblt cluster parameters to use in JSON format.'
    required: true
  token:
    description: 'The GitHub access token.'
    required: true
  cluster-name-prefix:
    description: 'Prefix to be prepended to the randomised cluster name'
    required: false
  cluster-name-suffix:
    description: 'Suffix to be appended to the randomised cluster name'
    required: false
  slackChannel:
    description: 'The slack channel to notify the status.'
    default: '#observablt-bots'
    required: false
  username:
    description: 'Username to show in the deployments with oblt-cli, format: [a-z0-9]'
    default: 'apmmachine'
    required: false
  gitops:
    description: 'Whether to provide the GitOps metadata to the oblt-cli'
    default: false
    required: false
  dry-run:
    description: 'Whether to dryRun'
    default: false
    required: false

runs:
  using: "composite"
  steps:
    - name: Configure oblt-cli flags for gitops - issues
      if: ${{ !github.event.issue.pull_request && contains(inputs.gitops, 'true') }}
      run: |
        {
          echo -n '{'
          echo -n '"GitOps":"true",'
          echo -n '"GitHubRepository":"${{ github.repository }}"'
          [ -n '${{ github.event.issue.number }}' ] && echo -n '"GitHubIssue":"${{ github.event.issue.number }}"'
          echo -n '}'
        } > .gitops
        echo "GITOPS=$(cat .gitops)" >> $GITHUB_ENV
        rm .gitops
      shell: bash

    - name: Configure oblt-cli flags for gitops - pull-request
      if: github.event.issue.pull_request && contains(inputs.gitops, 'true')
      run: |
        {
          echo -n '{'
          echo -n '"GitOps":"true",'
          echo -n '"GitHubRepository":"${{ github.repository }}",'
          echo -n '"GitHubCommit":"${{ github.event.comment.id }}",'
          echo -n '"GitHubPullRequest":"${{ github.event.issue.number }}"'
          echo -n '}'
        } > .gitops
        echo "GITOPS=$(cat .gitops)" >> $GITHUB_ENV
        rm .gitops
      shell: bash

    - name: Configure oblt-cli flags
      run: |
        {
          echo -n '--template=${{ inputs.template }} '
          [ -n '${{ inputs.cluster-name-prefix }}' ] \
            && echo -n '--cluster-name-prefix=${{ inputs.cluster-name-prefix }} '
          [ -n '${{ inputs.cluster-name-suffix }}' ] \
            && echo -n '--cluster-name-suffix=${{ inputs.cluster-name-suffix }} '
          [ '${{ inputs.dry-run }}' == 'true' ] \
            && echo -n '--dry-run '
        } > .flags
        echo "COMMAND=$(cat .flags)" >> $GITHUB_ENV
        rm .flags
        # Merge GITOPS with the PARAMETERS
        if [ -n "$GITOPS" ] ; then
          MERGED=$(echo '${{ inputs.parameters }} ${{ env.GITOPS }}' | jq -c -s add)
          echo "PARAMETERS=${MERGED}" >> $GITHUB_ENV
        else
          echo "PARAMETERS=${{ inputs.parameters }}" >> $GITHUB_ENV
        fi
      shell: bash

    - uses: elastic/apm-pipeline-library/.github/actions/oblt-cli@current
      with:
        command: cluster create custom ${{ env.COMMAND }} --parameters='${{ env.PARAMETERS }}'
        slackChannel: ${{ inputs.slackChannel }}
        token: ${{ inputs.token }}
        username: ${{ inputs.username }}
