name: 'Oblt-cli wrapper'
description: 'Run the oblt-cli wrapper.'
inputs:
  vaultUrl:
    description: 'Vault URL'
    required: true
  vaultRoleId:
    description: 'Vault role ID'
    required: true
  vaultSecretId:
    description: 'Vault secret ID'
    required: true
  event:
    description: 'The GitHub event payload. JSON'
    required: true
  user:
    description: 'The GitHub user that triggered the workflow'
    required: true
  repository:
    description: 'The GitHub repository'
    required: true
runs:
  using: "composite"
  steps:
    - uses: elastic/apm-pipeline-library/.github/actions/github-token@current
      with:
        url: ${{ inputs.vaultUrl }}
        roleId: ${{ inputs.vaultRoleId }}
        secretId: ${{ inputs.vaultSecretId }}

    - uses: elastic/apm-pipeline-library/.github/actions/comment-reaction@current
      with:
        repository: ${{ inputs.repository }}
        commentId: ${{ event.comment.id }}
        token: ${{ env.GITHUB_TOKEN }}

    - name: Is an Elastician comment?
      id: is_elastic_member
      uses: elastic/apm-pipeline-library/.github/actions/is-member-elastic-org@current
      with:
        username: ${{ github.event.issue.user.login }}
        token: ${{ env.GITHUB_TOKEN }}

    - name: Get cluster given the target branch (either edge-lite or release)
      if: contains(steps.is_elastic_member.outputs.result, 'true')
      run: |-
        if [ "${{ github.base_ref }}" == 'main' ] ; then
          echo "CLUSTER=edge-lite-oblt" >> $GITHUB_ENV
        else
          echo "CLUSTER=release-oblt" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Create github issue body
      if: contains(steps.is_elastic_member.outputs.result, 'true')
      run: |-
        cat <<EOT >> .body-content
        ### From cluster

        ${{ env.CLUSTER }}

        ### Kibana branch

        pr/${{ event.pull_request.number }}

        ### Custom prefix (Optional)

        _No response_

        ### Oblt-cli user (Optional)

        ${{ github.event.issue.user.login }}

        ### further details

        Created by a GitHub command in the project https://github.com/${{ inputs.repository }}/pulls/${{ event.pull_request.number }}
        EOT
      shell: bash

    ### TODO: gather the http url so it can be reported back to the GitHub comment
    - name: Create github issue for the deploy-my-kibana
      if: contains(steps.is_elastic_member.outputs.result, 'true')
      run: |
        gh issue \
          create \
          --label 'deploy-custom-kibana' \
          --title "[Deploy Kibana]: for user ${{ inputs.user }}" \
          --assignee ${{ inputs.user }} \
          --body-file .body-content \
          --repo elastic/observability-robots-automation
      env:
        GH_TOKEN: ${{ env.GITHUB_TOKEN }}
      shell: bash

    - name: Notify with a reaction if a non-elastician comment
      uses: elastic/apm-pipeline-library/.github/actions/comment-reaction@current
      if: contains(steps.is_elastic_member.outputs.result, 'false')
      with:
        repository: ${{ inputs.repository }}
        commentId: ${{ event.comment.id }}
        emoji: '-1'
        token: ${{ env.GITHUB_TOKEN }}
