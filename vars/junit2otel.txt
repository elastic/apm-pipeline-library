Wrap the junit built-in step to send OpenTelemetry traces for the test reports that are going to be
populated later on, using the https://github.com/mdelapenya/junit2otel library.

1. If the REPO variable is set, but the serviceName attribute is not passed, then REPO will be used as service name.
2. If the REPO variable is set, but the traceName attribute is not passed, then REPO will be used as trace name.
3. If the serviceVersion attribute is not passed, then it will use, in this particular order: pull-request ID, tag name and branch name. Else, it will use 'unknown'.

```

    pipeline {
        ...
        stages {
            stage(...) {
                post {
                    always {
                        // JUnit with OpenTelemetry traces
                        junit2otel(testResults: 'TEST-*.xml', serviceName: 'apm-pipeline-library', serviceVersion: 'main', traceName: 'junit-tests')

                        // JUnit with attributes inferred from Repository
                        withEnv([
                            "REPO=apm-pipeline-library",
                        ]){
                            junit2otel(testResults: 'TEST-*.xml')
                        }
                    }
                }
            }
        }
        ...
    }
```

* *serviceName*: name of the service. Optional
* *serviceVersion*: version of the service. Optional
* *traceName*: name of the trace. Optional
* *testResults*: from the `junit` step. Mandatory
* *allowEmptyResults*: from the `junit` step. Optional
* *keepLongStdio*: from the `junit` step. Optional


**NOTE**: See https://www.jenkins.io/doc/pipeline/steps/junit/#junit-plugin for reference of the arguments
