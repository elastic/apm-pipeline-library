Given the release manager output then it analyses the failure if any, and returns
the digested output to the end user.

```
// analyse the release manager build output
def output = releaseManagerAnalyser(file: 'release-manager.out')

```

* file: the file with the release manager output. Mandatory.
* analyse: whether to analyse the release manager output to look for kwown errors. Optional.
* body: this is the body email that will be also added to the subject when using slack notifications. Optional
* slackChannel: the slack channel, multiple channels may be provided as a comma, semicolon, or space delimited string. Default `env.SLACK_CHANNEL`
* slackColor: an optional value that can either be one of good, warning, danger, or any hex color code (eg. #439FE0)
* slackCredentialsId: the slack credentialsId. Default 'jenkins-slack-integration-token'
* subject: this is subject email that will be also aggregated to the body when using slack notifications. Optional
* to: who should receive an email. Default `env.NOTIFY_TO`
