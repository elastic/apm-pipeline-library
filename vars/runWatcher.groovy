// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/**
 Run the given watcher and send an email if configured for such an action.

*/

def call(Map args = [:]) {
    def watcher = args.containsKey('watcher') ? args.watcher : error('runWatcher: watcher param is required')
    def sendEmail = args.get('sendEmail', 'false')
    def subject = args.get('subject', '[Autogenerated]')
    def to = args.get('to', '')
    def secret = args.get('secret', 'secret/observability-team/ci/jenkins-stats-cloud')
    def es = args.get('es', getVaultSecret(secret: secret)?.data.url)

    def query = "/_watcher/watch/${watcher}/_execute?pretty"
    def response = sendDataToElasticsearch(es: es, secret: secret, restCall: query, data: """{ "action_modes" : { "_all" : "force_execute" } }""")
    def parsed = toJSON(response)
    if (parsed?.watch_record.result.actions) {
        def body = parsed?.watch_record.result.actions.find { it.id?.equals('log') }?.logging?.logged_text
        log(level: 'INFO', text: "runWatcher: The REST API call returned ${body}")
        if (sendEmail && to?.trim()) {
            mail(to: to,
                subject: subject,
                body: body,
                mimeType: 'text/html'
            )
        }
        return body
    } else {
        log(level: 'WARN', text: "runWatcher: Didn't work")
    }
}
