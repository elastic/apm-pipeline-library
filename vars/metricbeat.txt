
 This step runs a metricbeat Docker container to grab the host metrics and send them to Elasticsearch
 or in a log.
 `metricbeat.stop()` will stop the metricbeat Docker container.

```
  metricbeat()
  ...
  metricbeat.stop()
```

```
  metricbeat(){
    ....
  }
```

* *es_secret:* Vault secrets with the details to access to Elasticsearch, this parameter is optional ({user: 'foo', password: 'myFoo', url: 'http://foo.example.com'})
* *output:* log file to save all Docker metricbeat details (docker_inspect.log). Optional
* *config:* metricbeat configuration file, a default configuration is created if the file does not exists (metricbeat_conf.yml).
* *image:* metricbeat Docker image to use (docker.elastic.co/beats/metricbeat:7.10.1).
* *timeout:* Time to wait before kill the metricbeat Docker container on the stop operation.
* *workdir:* Directory to use as root folder to read and write files (current folder).

```
  metricbeat(
    es_secret: 'secret/team/details',
    config: 'metricbeat.yml',
    image: 'docker.elastic.co/beats/metricbeat:7.10.1',
    workdir: "${env.WORKSPACE}")
  ...
  metricbeat.stop(workdir: "${env.WORKSPACE}")
```

```
pipeline {
  agent { label "ubuntu" }
  stages {
    stage('My Docker tests') {
      steps {
        metricbeat(es_secret: 'secret/team/details', workdir: "${env.WORKSPACE}")
        sh('docker run busybox  ls')
      }
      post {
        cleanup{
          script {
            metricbeat.stop(workdir: "${env.WORKSPACE}")
          }
        }
      }
    }
  }
}
```

```
pipeline {
  agent { label "ubuntu" }
  stages {
    stage('My Docker tests') {
      steps {
        metricbeat(es_secret: 'secret/team/details', workdir: "${env.WORKSPACE}"){
          sh('docker run -it busybox  sleep 30')
        }
      }
    }
  }
}
```
