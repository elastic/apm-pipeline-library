Notify build status in vary ways, such as an email, comment in GitHub, slack message.
In addition, it interacts with Elasticsearch to upload all the build data and execute
the flakey test analyser.

```
  // Default
  notifyBuildResult()

  // Notify to a different elasticsearch instance.
  notifyBuildResult(es: 'http://elastisearch.example.com:9200', secret: 'secret/team/ci/elasticsearch')

  // Notify a new comment with the content of the bundle-details.md file
  notifyBuildResult(newPRComment: [ bundle-details: 'bundle-details.md' ])

  // Notify build status for a PR as a GitHub comment, and send slack message if build failed
  notifyBuildResult(prComment: true, slackComment: true, slackChannel: '#my-channel')

  // Notify build status for a PR as a GitHub comment, and send slack message to multiple channels if build failed
  notifyBuildResult(prComment: true, slackComment: true, slackChannel: '#my-channel, #other-channel')

  // Notify build status for a PR as a GitHub comment, and send slack message with custom header
  notifyBuildResult(prComment: true, slackComment: true, slackChannel: '#my-channel', slackHeader: '*Header*: this is a header')

```
* es: Elasticserach URL to send the report.
* secret: vault secret used to access to Elasticsearch, it should have `user` and `password` fields.
* to: Array of emails to notify. Optional. Default value uses `env.NOTIFY_TO` which will add a suffix to the distribution list with the folder name or env.REPO
* statsURL: Kibana URL where you can check the stats sent to Elastic search.
* shouldNotify: boolean value to decide to send or not the email notifications, by default it send
emails on Failed builds that are not pull request.
* prComment: Whether to add a comment in the PR with the build summary as a comment. Default: `true`.
* slackComment: Whether to send a message in slack with the build summary as a comment. Default: `false`.
* slackHeader: What header to be added before the default comment. Default value uses ``.
* slackChannel: What slack channel. Default value uses `env.SLACK_CHANNEL`.
* slackCredentials: What slack credentials to be used. Default value uses `jenkins-slack-integration-token`.
* slackNotify: Whether to send or not the slack notifications, by default it sends notifications on Failed builds that are not pull request.
* analyzeFlakey: Whether or not to add a comment in the PR with tests which have been detected as flakey. Default: `false`.
* flakyReportIdx: The flaky index to compare this jobs results to. e.g. reporter-apm-agent-java-apm-agent-java-master
* flakyThreshold: The threshold below which flaky tests will be ignored. Default: 0.0
* newPRComment: The map of the data to be populated as a comment. Default empty.
* aggregateComments: Whether to create only one single GitHub PR Comment with all the details. Default true.
