Given the list of regexps, the CHANGE_TARGET, GIT_SHA env variables and the kind of match then it
evaluates the change list with the regexp list:

- When exact match then all the files should match those patterns then it returns `true` otherwise
`false`.
- Otherwise if any files match any of those patterns then it returns `true` otherwise `false`.

```
  // All the files in the changeset should match with ^_beats
  def match = isGitRegionMatch(regexps: ["^_beats", isExactMatch: true)

  // All the files in the changeset should match with ^_beats and *.py
  def match = isGitRegionMatch(regexps: ["^_beats", "**/*.py", isExactMatch: true)

  // Any files in the changeset that match with ^_beats or ^apm-server.docker.yml
  def match = isGitRegionMatch(regexps: ["^_beats", "^apm-server.docker.yml"])
  def match = isGitRegionMatch(regexps: ["^_beats", "^apm-server.docker.yml", isExactMatch: false)
```

* regexps: list of regex to be matched. Mandatory
* isExactMatch: whether all the elements in the regexps should match with the changeset. Default: false. Optional
