<%if (statusSuccess) {%>
## :green_heart: Build Succeeded
<%} else if (abortedBuild) {%>
  > There is a new build on-going so the previous on-going builds have been aborted.
<%} else if (buildStatus?.equals('ABORTED')) {%>
## :grey_exclamation: Build Aborted
  <%if (!build?.description != null && build?.description.toString().toLowerCase().contains('aborted')) {%>
  > There is a new build on-going so the previous on-going builds have been aborted.
  <%} else if (!build?.description != null && build?.description.toString().toLowerCase().contains('allowed')) {%>
  > ${build.description}
  <%} else {%>
  > Either there was a build timeout or someone aborted the build.
  <%}%>
<%} else {%>
## :broken_heart: ${(testsSummary?.failed != 0) ? 'Tests Failed' : 'Build Failed'}
<%}%>

<!-- BUILD BADGES-->
> _the below badges are clickable and redirect to their specific view in the CI or DOCS_
[![Pipeline View](https://img.shields.io/badge/pipeline-pipeline%20-green)](${jobUrl}/pipeline) [![Test View](https://img.shields.io/badge/test-test-green)](${jobUrl}/tests) [![Changes](https://img.shields.io/badge/changes-changes-green)](${jobUrl}/changes) [![Artifacts](https://img.shields.io/badge/artifacts-artifacts-yellow)](${jobUrl}/artifacts) <% if(docsUrl?.trim() && !buildStatus?.equals('ABORTED')) {%>[![preview](https://img.shields.io/badge/docs-preview-yellowgreen)](${docsUrl})<%}%>  <% if(env?.OTEL_ELASTIC_URL != null && !env?.OTEL_ELASTIC_URL.equals('null')) {%>[![preview](https://img.shields.io/badge/elastic-observability-blue)](${env?.OTEL_ELASTIC_URL.replaceAll(' ','+')})<%}%>

<!-- BUILD SUMMARY-->
<details><summary>Expand to view the summary</summary>
<p>

#### Build stats

<% if(!build?.causes instanceof net.sf.json.JSONNull && build?.causes?.shortDescription != null && ! build?.causes?.shortDescription?.isEmpty() && !build?.causes?.shortDescription.equals('null')) {%>
* Build Cause: `${build.causes.shortDescription}`
<%}%>
<% if(!build?.description instanceof net.sf.json.JSONNull && build?.description != null && !build?.description.equals('null')) {%>
* Reason: `${build.description}`
<%}%>
<% if(build?.startTime != null && !build?.startTime.equals('null')) {%>
* Start Time: ${build?.startTime}
<%}%>
<% if(build?.durationInMillis >= 0) {%>
* Duration: ${Math.round(build.durationInMillis/1000/60)} min ${Math.round(build.durationInMillis/1000)%60} sec
<%}%>
<% if(!build?.commitId instanceof net.sf.json.JSONNull && build?.commitId != null && !build?.commitId.equals('null') && build?.commitId.toString().trim()) {%>
* Commit: ${build?.commitId.split('\\+')[0]}
<%}%>

<% if(testsSummary?.total != 0) {%>
#### Test stats :test_tube:

| Test         | Results                         |
| ------------ | :-----------------------------: |
| Failed       | ${(testsSummary?.failed) ?: 0}  |
| Passed       | ${(testsSummary?.passed) ?: 0}  |
| Skipped      | ${(testsSummary?.skipped) ?: 0} |
| Total        | ${(testsSummary?.total) ?: 0}   |
<%}%>

</p>
</details>

<!-- TEST RESULTS IF ANY-->
<% if(testsErrors?.any{item -> item?.status == "FAILED"}) {%>
  ### Test errors [![${testsSummary?.failed}](https://img.shields.io/badge/${testsSummary?.failed}%20-red)](${jobUrl}/tests)
<details><summary>Expand to view the tests failures</summary><p>
    ${(testsSummary?.failed > 10) ? '> Show only the first 10 test failures' : ''}
    <% testsErrors?.findAll{item -> item?.status == "FAILED"}?.take(10)?.each { test -> %>
##### `${test?.name}`
<% errorDetails = (test?.errorDetails && !test?.errorDetails?.equals('null')) ? "<details><summary>Expand to view the error details</summary><p>\n\n```\n ${test?.errorDetails} \n ```\n</p></details>" : '<li>no error details</li>'%>
<% errorStackTrace = (test?.errorStackTrace && !test?.errorStackTrace?.equals('null')) ? "<details><summary>Expand to view the stacktrace</summary><p>\n\n```\n ${test?.errorStackTrace} \n ```\n</p></details>" : '<li>no stacktrace</li>'%>
<ul>
${errorDetails}
${errorStackTrace}
</ul>
    <%}%>
</p></details>
<%}%>

<!-- STEPS ERRORS IF ANY -->
<% errorGitHub = stepsErrors?.find{it?.result == "FAILURE" && it?.displayName?.contains('Notifies GitHub')}%>
<% errorGithubPrCheckApproved = stepsErrors?.find{it?.result == "FAILURE" && it?.displayDescription?.contains('githubPrCheckApproved')}%>
<% errorDeleteDir = stepsErrors?.find{it?.result == "FAILURE" && it?.displayName?.contains('Recursively delete the current directory from the workspace')}%>
<% stepsErrors = stepsErrors?.findAll{it?.result == "FAILURE" &&
                                      !it?.displayName?.contains('Notifies GitHub') &&
                                      !it?.displayName?.contains('Archive JUnit') &&
                                      !it?.displayDescription?.contains('githubPrCheckApproved') &&
                                      !it?.displayDescription?.contains('approval-list/elastic') &&
                                      !it?.displayName?.contains('Recursively delete the current directory from the workspace')}%>
<% errorSignal = stepsErrors?.find{it?.displayName?.contains('Error signal')}%>
<% stepsErrors = stepsErrors?.findAll{ !it?.displayName?.contains('Error signal') } %>
<% if (errorSignal) { stepsErrors = stepsErrors << errorSignal }%>
<% if (errorDeleteDir) { stepsErrors = stepsErrors << errorDeleteDir }%>
<% if (stepsErrors?.size() <= 0 && !buildStatus?.equals('SUCCESS') && errorGitHub) {%>
  <% stepsErrors = stepsErrors << errorGitHub %>
<%}%>
<% if (!buildStatus?.equals('ABORTED') && errorGithubPrCheckApproved) {%>
  <% stepsErrors = stepsErrors << errorGithubPrCheckApproved %>
<%}%>
<% if (!statusSuccess) {%>
<% if (stepsErrors?.size() != 0) {%>
### Steps errors [![${stepsErrors?.size()}](https://img.shields.io/badge/${stepsErrors?.size()}%20-red)](${jobUrl}/pipeline)
  <details><summary>Expand to view the steps failures</summary>
  <p>

<% if (stepsErrors?.size() > 10) {%>
> Show only the first 10 steps failures
<% }%>
  <% stepsErrors?.takeRight(10)?.each{ c -> %>
  <% description = (c?.displayDescription && c?.displayDescription != 'null') ? "<li>Description: <code>${c?.displayDescription}</code></l1>" : ''%>
  <% duration = (c?.durationInMillis >= 0 ) ? "Took ${Math.round(c.durationInMillis/1000/60)} min ${Math.round(c.durationInMillis/1000)%60} sec" : ''%>
  <% url = (c?.url && c?.url != 'null') ? ". View more details <a href=\"${c?.url}/?start=0\">here</a>" : ''%>
##### `${c?.displayName && c?.displayName != 'null' ? c?.displayName.replaceAll('\\n', '') : ''}`
<ul>
<li>${duration} ${url}</li>
${description}
</ul>
  <%}%>
  </p>
  </details>
<%} else if (!buildStatus?.equals('ABORTED')) {%>
### Pipeline error [![1](https://img.shields.io/badge/1%20-red)](${env?.BUILD_URL}/console)
  <p>
  > This error is likely related to the pipeline itself. Click <a href="${env?.BUILD_URL}console">here</a>
  > and then you will see the error (either incorrect syntax or an invalid configuration).
  </p>
<%}%>
<%}%>
