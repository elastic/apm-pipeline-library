---
version: "3.7"
services:
  jenkins:
    build: .
    container_name: jenkins-lint
    environment:
      CASC_JENKINS_CONFIG: /var/jenkins_home/casc_configs
      CASC_VAULT_ENGINE_VERSION: "1"
      CASC_VAULT_PATHS: |
        secret/jcasc/localhost/base,secret/jcasc/localhost/apm-ci,secret/observability-team/ci/service-account/jenkins-gce-elastic-observability
      CASC_VAULT_TOKEN: ${VAULT_TOKEN}
      CASC_VAULT_URL: ${VAULT_ADDR:-https://secrets.elastic.co:8200}
      JAVA_OPTS: >-
        -Djenkins.install.runSetupWizard=false
        -Dhudson.model.UsageStatistics.disabled=true
        -Dhudson.slaves.NodeProvisioner.initialDelay=0
        -Dhudson.slaves.NodeProvisioner.MARGIN=100
        -Dhudson.slaves.NodeProvisioner.MARGIN0=1.0
        -Dhudson.model.LoadStatistics.decay=0.5
        -Dhudson.model.LoadStatistics.clock=5000
    volumes:
      - type: volume
        source: jenkins_home
        target: /var/jenkins_home
      - type: bind
        source: ./configs/jenkins.yaml
        target: /var/jenkins_home/casc_configs/jenkins.yaml
      - type: bind
        source: ./configs/google.yaml
        target: /var/jenkins_home/casc_configs/google.yaml
        read_only: true
      - type: bind
        source: ../.
        target: /var/pipeline-library
        read_only: true
    ports:
      - "127.0.0.1:18080:8080"
      - "127.0.0.1:50000:50000"
    networks:
      apm-pipeline-library:

  otel-collector-contrib:
    image: otel/opentelemetry-collector-contrib:0.19.0
    command: ["--config=/etc/config.yaml", "--log-level=debug"]
    volumes:
      - ./opentelemetry-collector-exporter-elastic.yaml:/etc/config.yaml
    ports:
      - "888:1888"   # pprof extension
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      apm-server:
        condition: service_healthy
    networks:
      apm-pipeline-library:

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.10.0
    ports:
      - "127.0.0.1:8200:8200"
    command: >
      apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E xpack.monitoring.elasticsearch=true
        -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
      retries: 10
      interval: 10s
    networks:
      apm-pipeline-library:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "path.data=/usr/share/elasticsearch/data/7.10.0"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    ports:
      - "127.0.0.1:9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://elasticsearch:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      apm-pipeline-library:

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    environment:
      SERVER_NAME: kibana.example.org
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "127.0.0.1:5601:5601"
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      apm-pipeline-library:

volumes:
  jenkins_home:
  esdata:
    driver: local

networks:
  apm-pipeline-library:
    driver: bridge
